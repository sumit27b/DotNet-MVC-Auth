@model PizzaOrderApp.Models.PizzaModel
@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(x => x.PizzaName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.PizzaName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PizzaName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.PizzaDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.PizzaDesc, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PizzaDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.PizzaType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.PizzaType, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PizzaType, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PizzaPrice, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.PizzaPrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.PizzaPrice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}